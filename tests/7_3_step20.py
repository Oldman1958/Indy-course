"""
К азотистым основаниям относят аденин (A), гуанин (G), цитозин (C) и тимин (T), который входит в состав только ДНК.
Они обладают схожими структурами и химическими свойствами. Это гетероциклические органические соединения,
производные пиримидина и пурина, входящие в состав нуклеотидов. Аденин и гуанин — производные пурина,
а цитозин и тимин — производные пиримидина.

В этой задаче вам необходимо создать функцию count_AGTC, которая принимает на вход строку - последовательность ДНК,
состоящая только из символов A, G, T, C. Функция count_AGTC должна подсчитать количество каждого элемента
в переданной последовательности и вернуть кортеж из найденных четырех количеств.
Порядок элементов в кортеже должен быть именно таким A, G, T, C

count_AGTC('AGGTC') => (1, 2, 1, 1)
count_AGTC('AAAATTT') => (4, 0, 3, 0)
count_AGTC('AGTTTTT') => (1, 1, 5, 0)
count_AGTC('CCT') => (0, 0, 1, 2)


Нужно написать только определение функции count_AGTC
"""


def count_AGTC(dna):
    count_a = count_c = count_g = count_t = 0
    for i in dna:
        if i == 'A':
            count_a += 1
        elif i == 'G':
            count_g += 1
        elif i == 'T':
            count_t += 1
        elif i == 'C':
            count_c += 1
    out = (count_a, count_g, count_t, count_c)
    return out


# код ниже не стоит удалять, он нужен для проверки
assert count_AGTC('AGGTC') == (1, 2, 1, 1)
assert count_AGTC('AAAATTT') == (4, 0, 3, 0)
assert count_AGTC('AGTTTTT') == (1, 1, 5, 0)
assert count_AGTC('CCT') == (0, 0, 1, 2)
print('Проверки пройдены')
